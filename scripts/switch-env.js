/**
 * Script to switch between local and cloud Supabase environments
 * 
 * Usage:
 * 1. To switch to local: node scripts/switch-env.js local
 * 2. To switch to cloud: node scripts/switch-env.js cloud
 */

const fs = require('fs');
const path = require('path');

// Get the environment to switch to
const targetEnv = process.argv[2]?.toLowerCase();

if (!targetEnv || (targetEnv !== 'local' && targetEnv !== 'cloud')) {
  console.error('Please specify either "local" or "cloud" as the environment to switch to.');
  console.error('Usage: node scripts/switch-env.js [local|cloud]');
  process.exit(1);
}

// Paths to environment files
const envLocalPath = path.join(__dirname, '../.env.local');
const envProdPath = path.join(__dirname, '../.env.production');
const envPath = path.join(__dirname, '../.env');

// Check if the source file exists
const sourcePath = targetEnv === 'local' ? envLocalPath : envProdPath;
if (!fs.existsSync(sourcePath)) {
  console.error(`Source file ${sourcePath} does not exist.`);
  process.exit(1);
}

// Read the source file
const envContent = fs.readFileSync(sourcePath, 'utf8');

// Extract the Supabase URL and keys
const supabaseUrlMatch = envContent.match(/NEXT_PUBLIC_SUPABASE_URL=(.+)/);
const supabaseAnonKeyMatch = envContent.match(/NEXT_PUBLIC_SUPABASE_ANON_KEY=(.+)/);
const supabaseServiceRoleKeyMatch = envContent.match(/SUPABASE_SERVICE_ROLE_KEY=(.+)/);

if (!supabaseUrlMatch || !supabaseAnonKeyMatch) {
  console.error(`Could not find Supabase URL or anon key in ${sourcePath}.`);
  process.exit(1);
}

// Create the .env file content
const newEnvContent = `# This file is auto-generated by scripts/switch-env.js
# Current environment: ${targetEnv.toUpperCase()}

# Supabase Configuration
NEXT_PUBLIC_SUPABASE_URL=${supabaseUrlMatch[1]}
NEXT_PUBLIC_SUPABASE_ANON_KEY=${supabaseAnonKeyMatch[1]}

# Supabase Service Role Key (if available)
${supabaseServiceRoleKeyMatch ? `SUPABASE_SERVICE_ROLE_KEY=${supabaseServiceRoleKeyMatch[1]}` : '# SUPABASE_SERVICE_ROLE_KEY=not-available'}

# Application URL
NEXT_PUBLIC_APP_URL=${targetEnv === 'local' ? 'http://localhost:3000' : 'https://your-production-url.com'}
`;

// Write the new .env file
fs.writeFileSync(envPath, newEnvContent);

console.log(`Successfully switched to ${targetEnv.toUpperCase()} environment.`);
console.log(`Supabase URL: ${supabaseUrlMatch[1]}`);
console.log(`Application URL: ${targetEnv === 'local' ? 'http://localhost:3000' : 'https://your-production-url.com'}`);

// Additional instructions
if (targetEnv === 'local') {
  console.log('\nTo start the local Supabase instance, run:');
  console.log('npm run supabase:start');
} else {
  console.log('\nTo test the cloud connection, run:');
  console.log('node scripts/test-supabase-api.js');
}

console.log('\nTo start the application with the new environment, run:');
console.log('npm run dev');
